{"remainingRequest":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dedsec/Documents/US-Shop/src/components/products/cart/CartCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dedsec/Documents/US-Shop/src/components/products/cart/CartCalculator.vue","mtime":1595487788264},{"path":"/home/dedsec/Documents/US-Shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgLyogZXNsaW50LWRpc2FibGUgKi8KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMsIG1hcE11dGF0aW9ucyB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImNhcnRDYWxjdWxhdG9yIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdG90YWxWYWx1ZTogMC4wLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbImNhcnRQcm9kdWN0cyJdKSwKCiAgICBzYXZlZENhcnRQcm9kdWN0KCkgewogICAgICByZXR1cm4gWwogICAgICAgIC4uLm5ldyBTZXQodGhpcy5jYXJ0UHJvZHVjdHMubWFwKCh2KSA9PiBKU09OLnN0cmluZ2lmeSh2KSkpLAogICAgICBdLm1hcCgodikgPT4gSlNPTi5wYXJzZSh2KSk7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgY2FsY3VsYXRlVG90YWxQcmljZSgpIHsKICAgICAgdGhpcy50b3RhbFZhbHVlID0gMDsKICAgICAgdGhpcy5jYXJ0UHJvZHVjdHMuZm9yRWFjaCgocHJvZHVjdCkgPT4gewogICAgICAgIHRoaXMudG90YWxWYWx1ZSArPSBwYXJzZUZsb2F0KHByb2R1Y3QucHJpY2UpOwogICAgICB9KTsKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUucmVzb3VyY2VzLnRvdGFsUHJpY2UgPSB0aGlzLnRvdGFsVmFsdWU7CiAgICB9LAogICAgUXR5UHJvZHVjdChwcm9kdWN0KSB7CiAgICAgIHJldHVybiB0aGlzLmNhcnRQcm9kdWN0cy5maWx0ZXIoKHYpID0+IHYuaWQgPT09IHByb2R1Y3QuaWQpLmxlbmd0aDsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5jYWxjdWxhdGVUb3RhbFByaWNlKCk7CiAgICAvLyAucmVwbGFjZSgvW14wLTlcLl0rL2csICIiKQogIH0sCiAgbW91bnRlZCgpIHt9LAp9Owo="},{"version":3,"sources":["CartCalculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CartCalculator.vue","sourceRoot":"src/components/products/cart","sourcesContent":["<template>\n  <div class=\"cart-calculator\">\n    <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n      <span class=\"text-muted\">Your cart</span>\n      <span class=\"badge badge-primary badge-pill\">{{\n        cartProducts.length\n      }}</span>\n    </h4>\n    <ul class=\"list-group mb-3\">\n      <li\n        class=\"list-group-item d-flex justify-content-between lh-condensed\"\n        v-for=\"(product, id) in savedCartProduct\"\n        :key=\"id\"\n      >\n        <div>\n          <h6 class=\"my-0\">{{ product.name }}</h6>\n        </div>\n        <span class=\"text-muted\" style=\"width:120px\">{{\n          product.price * QtyProduct(product) + product.currency\n        }}</span>\n        <input\n          type=\"text\"\n          class=\"bg-white border-0\"\n          style=\"max-width: 50px;\"\n          :value=\"QtyProduct(product)\"\n          aria-label=\"Amount (to the nearest dollar)\"\n          disabled\n        />\n      </li>\n      <hr />\n      <li class=\"list-group-item d-flex justify-content-between\">\n        <span>Total (INR)</span>\n        <strong> {{ totalValue.toFixed(2) }}Frw</strong>\n      </li>\n    </ul>\n  </div>\n</template>\n<script>\n  /* eslint-disable */\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nexport default {\n  name: \"cartCalculator\",\n  data() {\n    return {\n      totalValue: 0.0,\n    };\n  },\n  computed: {\n    ...mapState([\"cartProducts\"]),\n\n    savedCartProduct() {\n      return [\n        ...new Set(this.cartProducts.map((v) => JSON.stringify(v))),\n      ].map((v) => JSON.parse(v));\n    },\n  },\n  methods: {\n    calculateTotalPrice() {\n      this.totalValue = 0;\n      this.cartProducts.forEach((product) => {\n        this.totalValue += parseFloat(product.price);\n      });\n      this.$store.state.resources.totalPrice = this.totalValue;\n    },\n    QtyProduct(product) {\n      return this.cartProducts.filter((v) => v.id === product.id).length;\n    },\n  },\n  created() {\n    this.calculateTotalPrice();\n    // .replace(/[^0-9\\.]+/g, \"\")\n  },\n  mounted() {},\n};\n</script>\n<style></style>\n"]}]}
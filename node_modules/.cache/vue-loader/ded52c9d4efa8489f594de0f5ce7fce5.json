{"remainingRequest":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dedsec/Documents/US-Shop/src/components/products/ProductDetail.vue?vue&type=template&id=f13b1fb6&scoped=true&","dependencies":[{"path":"/home/dedsec/Documents/US-Shop/src/components/products/ProductDetail.vue","mtime":1595854378630},{"path":"/home/dedsec/Documents/US-Shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
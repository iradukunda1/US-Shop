{"remainingRequest":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dedsec/Documents/US-Shop/src/components/dashboardLayout/pages/product/product-list.vue?vue&type=style&index=0&id=f14fabd4&scoped=true&lang=css&","dependencies":[{"path":"/home/dedsec/Documents/US-Shop/src/components/dashboardLayout/pages/product/product-list.vue","mtime":1595488781393},{"path":"/home/dedsec/Documents/US-Shop/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dedsec/Documents/US-Shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYmxlIHsKICB3aWR0aDogMTAwdnc7Cn0K"},{"version":3,"sources":["product-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA","file":"product-list.vue","sourceRoot":"src/components/dashboardLayout/pages/product","sourcesContent":["<template>\n  <div class=\"product-list-manage\" v-if=\"!processing\">\n    <div class=\"container-fluid px-4 py-5\">\n      <div class=\"row mb-3\">\n        <div class=\"col-12\">\n          <div class=\"page-title-box\">\n            <h4 class=\"page-title\">Manage Product</h4>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"mb-2 d-flex\">\n                <div class=\"d-block p-1\">\n                  <i class=\"fa fa-bell\"></i>\n                  <span class=\"pl-2\">Product</span>\n                </div>\n                <div class=\"ml-auto\">\n                  <button\n                    type=\"button\"\n                    @click=\"addProduct()\"\n                    class=\"btn btn-danger mb-2 mr-2\"\n                  >\n                    <i class=\"fa  fa-plus mr-1\"></i> Add New Product\n                  </button>\n                </div>\n              </div>\n              <div class=\"table-responsive\">\n                <table class=\"table table-centered  table-hover mb-0\">\n                  <thead class=\"thead-light\">\n                    <tr style=\"width:max-content\">\n                      <th><i class=\"fa fa-briefcase pr-2\"></i>S.no</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>Name</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>Category</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>SubCategory</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>Actual Price</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>Quantity</th>\n                      <th><i class=\"fa fa-user pr-2\"></i>Code</th>\n                      <th>Option</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr\n                      v-for=\"(product, index) in filteredProducts\"\n                      :key=\"index\"\n                    >\n                      <td>\n                        <a class=\"text-body font-weight-bold\"></a\n                        >{{ index + 1 }}.\n                      </td>\n                      <td width=\"auto\">{{ product.name }}</td>\n                      <td>\n                        <span\n                          v-for=\"category in product.categories\"\n                          :key=\"category.id\"\n                          :class=\"{\n                            'text-danger': !product.categories.length,\n                          }\"\n                          class=\"text-muted\"\n                          >{{\n                            category.name +\n                              (product.categories.length > 0 ? \"\" : \",\") ||\n                              \"No category\"\n                          }}</span\n                        >\n                      </td>\n                      <td>\n                        <span\n                          v-for=\"subCategory in product.tags\"\n                          :key=\"subCategory.id\"\n                          :class=\"{\n                            'text-danger': !product.tags.length,\n                          }\"\n                          class=\"text-muted\"\n                          >{{\n                            subCategory.name +\n                              (product.tags.length > 0 ? \"\" : \",\") ||\n                              \"No sub category\"\n                          }}</span\n                        >\n                      </td>\n                      <td>{{ product.price + \" \" + product.currency }}</td>\n                      <td>{{ product.stock }}</td>\n                      <td>{{ product.code || \"83274\" }}</td>\n                      <td>\n                        <span title=\"view\" style=\"cursor: pointer\"\n                          ><i class=\"fa fa-eye\"></i\n                        ></span>\n                        <span style=\"cursor: pointer\" class=\"mx-2\" title=\"Edit\"\n                          ><i class=\"fa fa-edit \"></i\n                        ></span>\n                        <span\n                          style=\"cursor: pointer\"\n                          title=\"delete\"\n                          @click.stop=\"deleteProduct(product)\"\n                        >\n                          <i class=\"fa fa-trash-alt\"></i\n                        ></span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div v-if=\"!filteredProducts.length\" class=\"mx-auto\">\n              <h1 class=\"text-danger px-5\">Oops!</h1>\n              <h2 class=\"text-danger\">No Products Found</h2>\n              <div class=\"error-actions\">\n                <a class=\"btn text-white\">\n                  <span class=\"glyphicon glyphicon-envelope\"></span>\n                  <router-link to=\"add-product\"\n                    >Take me to Create Products Page</router-link\n                  >\n                </a>\n              </div>\n            </div>\n            <div class=\"px-3 pb-2 d-flex\" v-if=\"filteredProducts.length\">\n              <p class=\"mb-0 ml-auto\">\n                <span class=\"text-info\">\n                  showing 1 to\n                  {{ products.page_meta.requested_page_size }} products of\n                  <b>{{ products.page_meta.number_of_pages }} </b> pages\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  /* eslint-disable */\nimport { errorToaster } from \"../../../shared/service/ErrorHandler\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"product-list-management\",\n  data() {\n    return {\n      filter: null,\n    };\n  },\n  methods: {\n    addProduct() {\n      this.$router.push(\"add-product\");\n    },\n   async fetchAllProducts() {\n      this.loader(true, {\n        context: \"fetching all products....\",\n        area: \"app\",\n      }),\n       await this.$store\n          .dispatch(\"fetchProducts\")\n          .then((res) => {\n          this.loader(false);\n          })\n          .catch((err) => {\n            this.loader(false);\n            errorToaster(\n              \"Error while fetching\",\n              \"sorry you seems to be offline\"\n            );\n          });\n    },\n    deleteProduct(product){\n      this.modalAlert(true,{\n        title:\"Deleting Product\",\n        message:`Do you really want to delete <b>${product.name}</b> from products list?`,\n        actionName:\"Delete\",\n        action: () =>{\n          this.modalAlert(false),\n          this.loader(true,{\n            context:`Deleting ${product.name} ...`,\n            area:\"app\",\n            textColor:\"white\",\n            bg:\"black\"\n          })\n          this.$store.dispatch(\"deleteProduct\",product.id)\n          .then(() =>{\n            this.$store.dispatch(\"fetchProducts\")\n            this.loader(false)\n          })\n          .catch(err =>{\n            this.loader(false)\n            console.log(err)\n          })\n        }\n      })\n    }\n  },\n  computed: {\n    ...mapGetters([\"resources\"]),\n    products() {\n      return this.resources.products;\n    },\n    filteredProducts() {\n      return this.products.products.filter((product) => {\n        return product;\n      });\n    },\n  },\n  mounted() {\n    setTimeout(()=>\n      this.fetchAllProducts()\n    ,1000)\n    ;\n  },\n};\n</script>\n\n<style scoped>\n.table {\n  width: 100vw;\n}\n</style>\n"]}]}